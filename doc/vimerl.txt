*vimerl.txt*	The Erlang plugin for Vim



                   _    ___                     __
                  | |  / (_)___ ___  ___  _____/ /
                  | | / / / __ `__ \/ _ \/ ___/ /
                  | |/ / / / / / / /  __/ /  / /
                  |___/_/_/ /_/ /_/\___/_/  /_/

                  http://github.com/jimenezrick/vimerl



==============================================================================
Contents                                                              *vimerl*

1. Intro	|vimerl|
2. Commands	|vimerl-commands|
3. Options	|vimerl-options|
4. License	|vimerl-license|

==============================================================================
1. Intro                                                        *vimerl-intro*

Vimerl is a plugin for programming in Erlang. It provides several nice
features to make your life easier when writing code.

The plugin offers the following features:
	- Syntax highlighting
	- Code indenting
	- Code folding
	- Code omni completion
	- Syntax check
	- Compiler support
	- Code skeletons for the OTP behaviours
	- Pathogen support (http://github.com/tpope/vim-pathogen)

==============================================================================
2. Commands                                                  *vimerl-commands*

:ErlangDisableShowErrors                            *:ErlangDisableShowErrors*
    Disables syntax check. It also hides current errors.

:ErlangEnableShowErrors                              *:ErlangEnableShowErrors*
    Enables syntax check.

:ErlangApplication                                        *:ErlangApplication*
    Loads an OTP application skeleton.

:ErlangSupervisor                                          *:ErlangSupervisor*
    Loads an OTP supervisor skeleton.

:ErlangGenServer                                            *:ErlangGenServer*
    Loads an OTP gen_server skeleton.

:ErlangGenFsm                                                  *:ErlangGenFsm*
    Loads an OTP gen_fsm skeleton.

:ErlangGenEvent                                              *:ErlangGenEvent*
    Loads an OTP gen_event skeleton.

Note: all the previous commands are applied to the current buffer.

==============================================================================
3. Options                                                    *vimerl-options*

The following options offer the possibility to customize the plugin behaviour.



TODO TODO TODO
* Falta explicar como funcionan los skeleton, omni completion, syntax check.
* Explicar el folding, mirar el antiguo README!!!
*** SUBIR EL PLUGIN A VIM.ORG ***
TODO TODO TODO



------------------------------------------------------------------------------
                                                      *'erlang_highlight_bif'*

This option controls whether BIF functions are highlighted with a different
color from the rest of the functions (default: 1, values: 0 or 1): >

	:let erlang_highlight_bif = 1

------------------------------------------------------------------------------
                                                       *'erlang_skel_replace'*

This option controls whether loading a code skeleton implies replacing the
content of the current buffer (default: 1, values: 0 or 1): >

	:let erlang_skel_replace = 1

------------------------------------------------------------------------------
                                                        *'erlang_skel_header'*

This option defines the information used to fill the skeleton header. If this
variable is not defined, then the header is not included (default: undefined,
values: dictionary): >

	:let erlang_skel_header = {"author": {name},
				   "owner" : {owner},
				   "year"  : {year}}

Note: the "year" key can be omitted, in that case the current year is used.

------------------------------------------------------------------------------
                                                         *'erlang_keywordprg'*

This option defines the command used to show man-pages with the |K| command
(default: "erl -man", values: string): >

	:let erlang_keywordprg = "erl -man"

------------------------------------------------------------------------------
                                                        *'erlang_show_errors'*

This option controls defines if the syntax check is enabled (default: 1,
values: 0 or 1): >

	:let erlang_show_errors = 1

------------------------------------------------------------------------------
                                                    *'erlang_completion_grep'*

This option defines the grep program used for omni completion (default:
"grep", values: string): >

	:let erlang_completion_grep = "grep"

------------------------------------------------------------------------------
                                                      *'erlang_man_extension'*

This options defines the filename extension used in the man-pages (default:
"", values: string): >

	:let erlang_man_extension = ""

------------------------------------------------------------------------------
                                                           *'erlang_man_path'*

This option defined the location of the man-pages (default:
"/usr/lib/erlang/man", values: string): >

	:let erlang_man_path = "/usr/lib/erlang/man"

------------------------------------------------------------------------------
                                             *'erlang_completion_display_doc'*

This option controls whether if the arguments and the returned value are show
when using omni completion (default: 1, values: 0 or 1): >

	:let erlang_completion_display_doc = 1

==============================================================================
4. License                                                    *vimerl-license*

Several people have contributed to this plugin (see AUTHORS file), so it
should be necessary to ask everybody about how its code is licensed. Anyway,
assume that this is free software.

Use, copy or modify this code freely. At least try to preserve the names of
the authors who have participated.

 vim:tw=78:ts=8:ft=help:norl:
